syntax = "proto3";
package ddpoll;

service DDPoll {
    rpc EstablishPollStream(PollStreamConfig) returns (stream Poll) {}
    rpc FindPollByKeyWord(SearchQuery) returns (SearchResp) {}
    rpc DoAction(UserAction) returns (ActionSummary) {}
    rpc JoinPollGroup(JoinPollQuery) returns (stream Poll) {}
}

message JoinPollQuery {
    string phrase = 1;
}

message PollStreamConfig {
    enum RankBy {
        Time = 0;
        Participation = 1;
        Stars = 2;
    }
    RankBy rankBy = 1;
}

message Poll {
    uint64 id = 1;
    string owner = 2;
    string category = 3;
    string body = 4;
    uint64 stars = 5;
    enum DisplayType {
        OnVote = 0;
        OnReveal = 1;
    }
    DisplayType displayType = 6;
    repeated string tags = 7;
    repeated string options = 8;
    bytes attachment = 9;
}

message SearchQuery {
    uint32 pollID = 1;
    string keywords = 2;
    string tags = 3;
    uint32 numResultsMax = 4;
}

message SearchResp {
    uint32 numResultsActual = 1;
    repeated Poll polls = 2;
}

message UserAction {
    message Header {
        string username = 1;
        uint64 token = 2;
    }
    Header header = 1;
    uint32 resourceID = 2;  // The object that this action manipulates
    enum Action {
        Unknown = 0;
        Authenticate = 1;
        VoteMultiple = 2;
        Star = 3;
        Reveal = 4;
        Create = 5;
        Registeration = 6;
        GroupPolls = 7;
        StartGroupPoll = 8;
        StopGroupPoll = 9;
    }
    Action action = 3;
    repeated string parameters = 4; // Array of parameters
}

message ActionSummary {
    bytes info = 1;
    uint64 token = 2;
}